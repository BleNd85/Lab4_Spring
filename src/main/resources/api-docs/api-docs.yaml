openapi: 3.0.1
info:
  title: Hotel Service Demo
  description: Hotel Service Demo that provides CRUD operations for hotel
  contact:
    name: Udod Vladyslav
    email: udod.vladyslav@lll.kpi.ua
  version: "1.1"
servers:
- url: http://localhost:8080
  description: local test server
paths:
  /api/hotels/{id}:
    get:
      tags:
      - hotel-controller
      summary: Get Hotel By Id
      description: Retrieve a specific HotelDTO object by its unique identifier.
      operationId: getHotel
      parameters:
      - name: id
        in: path
        description: Unique hotel identifier.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/HotelDTO"
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/HotelDTO"
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/HotelDTO"
    put:
      tags:
      - hotel-controller
      summary: Update Existing Hotel By Id
      description: Update an existing hotel record by its unique identifier.
      operationId: updateHotel
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HotelDTO"
        required: true
      responses:
        "409":
          description: Conflict
        "204":
          description: Success. No Content
    delete:
      tags:
      - hotel-controller
      summary: Delete Existing Hotel By Id
      description: Delete an existing hotel record by its unique identifier.
      operationId: deleteHotel
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "400":
          description: Bad Request
        "200":
          description: Success
  /api/hotels:
    get:
      tags:
      - hotel-controller
      summary: Get All
      description: "Retrieve a paginated list of HotelDTO objects. You can filter\
        \ by name and type, and specify pagination parameters."
      operationId: getHotels
      parameters:
      - name: name
        in: query
        description: Filter by name of the hotel
        required: false
        schema:
          type: string
      - name: type
        in: query
        description: Filter by type of the hotel.
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: Page number for pagination.
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        description: Number of items per page.
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/HotelDTO"
    post:
      tags:
      - hotel-controller
      summary: Create New Hotel
      description: Create a new hotel by providing the necessary details.
      operationId: createHotel
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HotelDTO"
        required: true
      responses:
        "409":
          description: Conflict
        "201":
          description: Created
components:
  schemas:
    HotelDTO:
      required:
      - address
      - name
      - type
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        name:
          maxLength: 45
          minLength: 0
          type: string
          description: Name of the hotel
        address:
          type: string
          description: Address of the hotel
        type:
          type: string
          description: Type of the hotel
